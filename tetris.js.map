{"version":3,"sources":["webpack://tetris/./node_modules/eventemitter3/index.js","webpack://tetris/./node_modules/mousetrap/mousetrap.js","webpack://tetris/webpack/bootstrap","webpack://tetris/webpack/runtime/compat get default export","webpack://tetris/webpack/runtime/define property getters","webpack://tetris/webpack/runtime/hasOwnProperty shorthand","webpack://tetris/./src/Grid.js","webpack://tetris/./src/Tetrimino.js","webpack://tetris/./src/tetris.js","webpack://tetris/./src/controls.js"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","window","document","_REVERSE_MAP","_MAP","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","224","_KEYCODE_MAP","106","107","109","110","111","186","187","188","189","190","191","192","219","220","221","222","_SHIFT_MAP","_SPECIAL_ALIASES","test","navigator","platform","toString","Mousetrap","bind","keys","callback","action","self","_bindMultiple","unbind","trigger","_directMap","reset","_callbacks","stopCallback","e","element","className","indexOf","_belongsTo","target","composedPath","initialEventTarget","tagName","isContentEditable","handleKey","_handleKey","addKeycodes","object","key","init","documentMousetrap","method","charAt","define","_addEvent","type","addEventListener","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","toLowerCase","_isModifier","_pickBestAction","modifiers","_getReverseMap","_getKeyInfo","combination","replace","split","_keysFromString","ancestor","parentNode","targetElement","_resetTimer","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","modifiers1","modifiers2","matches","seq","metaKey","ctrlKey","sort","join","deleteCombo","combo","deleteSequence","splice","_fireCallback","sequence","srcElement","preventDefault","returnValue","_preventDefault","stopPropagation","cancelBubble","_stopPropagation","_handleKeyEvent","keyCode","altKey","_eventModifiers","_bindSingle","info","_increaseSequence","nextAction","clearTimeout","setTimeout","_callbackAndReset","wrappedCallback","_bindSequence","callbacks","maxLevel","processedSequenceCallback","Math","max","ignoreThisKeypress","combinations","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","Grid","constructor","options","grid","height","width","size","color","hit","prevPositions","_checkLines","p","full","collision","positions","map","pos","y","x","render","strokeStyle","beginPath","rect","fillStyle","fill","stroke","setPiece","piece","setPosition","shapes","symbol","shape","Tetrimino","storage","_store","getPosition","_test","scenario","accept","deny","floor","random","move","direction","rotate","update","sidebar","canvas","getElementById","style","display","margin","getContext","cooldown","frameId","points","timeout","pieces","gameLoop","requestAnimationFrame","font","textAlign","textBaseline","fillText","padding","onPiece","onPositions","onTest","position","unshift","onScore","lines","onEnd","cancelAnimationFrame","boxHeight","newGame","bindKeys"],"mappings":"kCAEA,IAAIA,EAAMC,OAAOC,UAAUC,eACvBC,EAAS,IASb,SAASC,KA4BT,SAASC,EAAGC,EAAIC,EAASC,GACvBC,KAAKH,GAAKA,EACVG,KAAKF,QAAUA,EACfE,KAAKD,KAAOA,IAAQ,EActB,SAASE,EAAYC,EAASC,EAAON,EAAIC,EAASC,GAChD,GAAkB,mBAAPF,EACT,MAAM,IAAIO,UAAU,mCAGtB,IAAIC,EAAW,IAAIT,EAAGC,EAAIC,GAAWI,EAASH,GAC1CO,EAAMZ,EAASA,EAASS,EAAQA,EAMpC,OAJKD,EAAQK,QAAQD,GACXJ,EAAQK,QAAQD,GAAKT,GAC1BK,EAAQK,QAAQD,GAAO,CAACJ,EAAQK,QAAQD,GAAMD,GADhBH,EAAQK,QAAQD,GAAKE,KAAKH,IADlCH,EAAQK,QAAQD,GAAOD,EAAUH,EAAQO,gBAI7DP,EAUT,SAASQ,EAAWR,EAASI,GACI,KAAzBJ,EAAQO,aAAoBP,EAAQK,QAAU,IAAIZ,SAC5CO,EAAQK,QAAQD,GAU9B,SAASK,IACPX,KAAKO,QAAU,IAAIZ,EACnBK,KAAKS,aAAe,EAxElBlB,OAAOqB,SACTjB,EAAOH,UAAYD,OAAOqB,OAAO,OAM5B,IAAIjB,GAASkB,YAAWnB,GAAS,IA2ExCiB,EAAanB,UAAUsB,WAAa,WAClC,IACIC,EACAC,EAFAC,EAAQ,GAIZ,GAA0B,IAAtBjB,KAAKS,aAAoB,OAAOQ,EAEpC,IAAKD,KAASD,EAASf,KAAKO,QACtBjB,EAAI4B,KAAKH,EAAQC,IAAOC,EAAMT,KAAKd,EAASsB,EAAKG,MAAM,GAAKH,GAGlE,OAAIzB,OAAO6B,sBACFH,EAAMI,OAAO9B,OAAO6B,sBAAsBL,IAG5CE,GAUTN,EAAanB,UAAU8B,UAAY,SAAmBnB,GACpD,IAAIG,EAAMZ,EAASA,EAASS,EAAQA,EAChCoB,EAAWvB,KAAKO,QAAQD,GAE5B,IAAKiB,EAAU,MAAO,GACtB,GAAIA,EAAS1B,GAAI,MAAO,CAAC0B,EAAS1B,IAElC,IAAK,IAAI2B,EAAI,EAAGC,EAAIF,EAASG,OAAQC,EAAK,IAAIC,MAAMH,GAAID,EAAIC,EAAGD,IAC7DG,EAAGH,GAAKD,EAASC,GAAG3B,GAGtB,OAAO8B,GAUThB,EAAanB,UAAUqC,cAAgB,SAAuB1B,GAC5D,IAAIG,EAAMZ,EAASA,EAASS,EAAQA,EAChCmB,EAAYtB,KAAKO,QAAQD,GAE7B,OAAKgB,EACDA,EAAUzB,GAAW,EAClByB,EAAUI,OAFM,GAYzBf,EAAanB,UAAUsC,KAAO,SAAc3B,EAAO4B,EAAIC,EAAIC,EAAIC,EAAIC,GACjE,IAAI7B,EAAMZ,EAASA,EAASS,EAAQA,EAEpC,IAAKH,KAAKO,QAAQD,GAAM,OAAO,EAE/B,IAEI8B,EACAZ,EAHAF,EAAYtB,KAAKO,QAAQD,GACzB+B,EAAMC,UAAUZ,OAIpB,GAAIJ,EAAUzB,GAAI,CAGhB,OAFIyB,EAAUvB,MAAMC,KAAKuC,eAAepC,EAAOmB,EAAUzB,QAAI2C,GAAW,GAEhEH,GACN,KAAK,EAAG,OAAOf,EAAUzB,GAAGqB,KAAKI,EAAUxB,UAAU,EACrD,KAAK,EAAG,OAAOwB,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,IAAK,EACzD,KAAK,EAAG,OAAOT,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,IAAK,EAC7D,KAAK,EAAG,OAAOV,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,EAAIC,IAAK,EACjE,KAAK,EAAG,OAAOX,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,EAAIC,EAAIC,IAAK,EACrE,KAAK,EAAG,OAAOZ,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,EAAIC,EAAIC,EAAIC,IAAK,EAG3E,IAAKX,EAAI,EAAGY,EAAO,IAAIR,MAAMS,EAAK,GAAIb,EAAIa,EAAKb,IAC7CY,EAAKZ,EAAI,GAAKc,UAAUd,GAG1BF,EAAUzB,GAAG4C,MAAMnB,EAAUxB,QAASsC,OACjC,CACL,IACIM,EADAhB,EAASJ,EAAUI,OAGvB,IAAKF,EAAI,EAAGA,EAAIE,EAAQF,IAGtB,OAFIF,EAAUE,GAAGzB,MAAMC,KAAKuC,eAAepC,EAAOmB,EAAUE,GAAG3B,QAAI2C,GAAW,GAEtEH,GACN,KAAK,EAAGf,EAAUE,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,SAAU,MACpD,KAAK,EAAGwB,EAAUE,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,QAASiC,GAAK,MACxD,KAAK,EAAGT,EAAUE,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,QAASiC,EAAIC,GAAK,MAC5D,KAAK,EAAGV,EAAUE,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,QAASiC,EAAIC,EAAIC,GAAK,MAChE,QACE,IAAKG,EAAM,IAAKM,EAAI,EAAGN,EAAO,IAAIR,MAAMS,EAAK,GAAIK,EAAIL,EAAKK,IACxDN,EAAKM,EAAI,GAAKJ,UAAUI,GAG1BpB,EAAUE,GAAG3B,GAAG4C,MAAMnB,EAAUE,GAAG1B,QAASsC,IAKpD,OAAO,GAYTzB,EAAanB,UAAUmD,GAAK,SAAYxC,EAAON,EAAIC,GACjD,OAAOG,EAAYD,KAAMG,EAAON,EAAIC,GAAS,IAY/Ca,EAAanB,UAAUO,KAAO,SAAcI,EAAON,EAAIC,GACrD,OAAOG,EAAYD,KAAMG,EAAON,EAAIC,GAAS,IAa/Ca,EAAanB,UAAU+C,eAAiB,SAAwBpC,EAAON,EAAIC,EAASC,GAClF,IAAIO,EAAMZ,EAASA,EAASS,EAAQA,EAEpC,IAAKH,KAAKO,QAAQD,GAAM,OAAON,KAC/B,IAAKH,EAEH,OADAa,EAAWV,KAAMM,GACVN,KAGT,IAAIsB,EAAYtB,KAAKO,QAAQD,GAE7B,GAAIgB,EAAUzB,GAEVyB,EAAUzB,KAAOA,GACfE,IAAQuB,EAAUvB,MAClBD,GAAWwB,EAAUxB,UAAYA,GAEnCY,EAAWV,KAAMM,OAEd,CACL,IAAK,IAAIkB,EAAI,EAAGT,EAAS,GAAIW,EAASJ,EAAUI,OAAQF,EAAIE,EAAQF,KAEhEF,EAAUE,GAAG3B,KAAOA,GACnBE,IAASuB,EAAUE,GAAGzB,MACtBD,GAAWwB,EAAUE,GAAG1B,UAAYA,IAErCiB,EAAOP,KAAKc,EAAUE,IAOtBT,EAAOW,OAAQ1B,KAAKO,QAAQD,GAAyB,IAAlBS,EAAOW,OAAeX,EAAO,GAAKA,EACpEL,EAAWV,KAAMM,GAGxB,OAAON,MAUTW,EAAanB,UAAUoD,mBAAqB,SAA4BzC,GACtE,IAAIG,EAUJ,OARIH,GACFG,EAAMZ,EAASA,EAASS,EAAQA,EAC5BH,KAAKO,QAAQD,IAAMI,EAAWV,KAAMM,KAExCN,KAAKO,QAAU,IAAIZ,EACnBK,KAAKS,aAAe,GAGfT,MAMTW,EAAanB,UAAUqD,IAAMlC,EAAanB,UAAU+C,eACpD5B,EAAanB,UAAUS,YAAcU,EAAanB,UAAUmD,GAK5DhC,EAAamC,SAAWpD,EAKxBiB,EAAaA,aAAeA,EAM1BoC,EAAOC,QAAUrC,G,cC9UnB,OAsBA,SAAUsC,EAAQC,EAAUV,GAGxB,GAAKS,EAAL,CA6HA,IAhHA,IA0GIE,EA1GAC,EAAO,CACPC,EAAG,YACHC,EAAG,MACHC,GAAI,QACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,WACJC,GAAI,MACJC,GAAI,QACJC,GAAI,SACJC,GAAI,WACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,KACJC,GAAI,QACJC,GAAI,OACJC,GAAI,MACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,IAAK,QAWLC,EAAe,CACfC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KAaLC,EAAa,CACb,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,MASLC,EAAmB,CACnB,OAAU,MACV,QAAW,OACX,OAAU,QACV,OAAU,MACV,KAAQ,IACR,IAAO,uBAAuBC,KAAKC,UAAUC,UAAY,OAAS,QAgB7DxE,EAAI,EAAGA,EAAI,KAAMA,EACtB4B,EAAK,IAAM5B,GAAK,IAAMA,EAM1B,IAAKA,EAAI,EAAGA,GAAK,IAAKA,EAOlB4B,EAAK5B,EAAI,IAAMA,EAAEyE,WAuuBrBC,EAAU1G,UAAU2G,KAAO,SAASC,EAAMC,EAAUC,GAChD,IAAIC,EAAOvG,KAGX,OAFAoG,EAAOA,aAAgBxE,MAAQwE,EAAO,CAACA,GACvCG,EAAKC,cAActF,KAAKqF,EAAMH,EAAMC,EAAUC,GACvCC,GAoBXL,EAAU1G,UAAUiH,OAAS,SAASL,EAAME,GAExC,OADWtG,KACCmG,KAAKjF,KADNlB,KACiBoG,GAAM,cAAeE,IAUrDJ,EAAU1G,UAAUkH,QAAU,SAASN,EAAME,GACzC,IAAIC,EAAOvG,KAIX,OAHIuG,EAAKI,WAAWP,EAAO,IAAME,IAC7BC,EAAKI,WAAWP,EAAO,IAAME,GAAQ,GAAIF,GAEtCG,GAUXL,EAAU1G,UAAUoH,MAAQ,WACxB,IAAIL,EAAOvG,KAGX,OAFAuG,EAAKM,WAAa,GAClBN,EAAKI,WAAa,GACXJ,GAUXL,EAAU1G,UAAUsH,aAAe,SAASC,EAAGC,GAI3C,IAAK,IAAMA,EAAQC,UAAY,KAAKC,QAAQ,gBAAkB,EAC1D,OAAO,EAGX,GAAIC,EAAWH,EAPJhH,KAOkBoH,QACzB,OAAO,EASX,GAAI,iBAAkBL,GAA+B,mBAAnBA,EAAEM,aAA6B,CAE7D,IAAIC,EAAqBP,EAAEM,eAAe,GACtCC,IAAuBP,EAAEK,SACzBJ,EAAUM,GAKlB,MAA0B,SAAnBN,EAAQO,SAAyC,UAAnBP,EAAQO,SAA0C,YAAnBP,EAAQO,SAAyBP,EAAQQ,mBAMjHtB,EAAU1G,UAAUiI,UAAY,WAC5B,IAAIlB,EAAOvG,KACX,OAAOuG,EAAKmB,WAAWjF,MAAM8D,EAAMjE,YAMvC4D,EAAUyB,YAAc,SAASC,GAC7B,IAAK,IAAIC,KAAOD,EACRA,EAAOnI,eAAeoI,KACtBzE,EAAKyE,GAAOD,EAAOC,IAG3B1E,EAAe,MASnB+C,EAAU4B,KAAO,WACb,IAAIC,EAAoB7B,EAAUhD,GAClC,IAAK,IAAI8E,KAAUD,EACU,MAArBC,EAAOC,OAAO,KACd/B,EAAU8B,GAAW,SAASA,GAC1B,OAAO,WACH,OAAOD,EAAkBC,GAAQvF,MAAMsF,EAAmBzF,YAF7C,CAIlB0F,KAKf9B,EAAU4B,OAGV7E,EAAOiD,UAAYA,EAGkBnD,EAAOC,UACxCD,EAAOC,QAAUkD,QAlgCzB,KAugCQgC,aACI,OAAOhC,GADL,8BA92BV,SAASiC,EAAUP,EAAQQ,EAAM/B,GACzBuB,EAAOS,iBACPT,EAAOS,iBAAiBD,EAAM/B,GAAU,GAI5CuB,EAAOU,YAAY,KAAOF,EAAM/B,GASpC,SAASkC,EAAoBxB,GAGzB,GAAc,YAAVA,EAAEqB,KAAoB,CACtB,IAAII,EAAYC,OAAOC,aAAa3B,EAAE4B,OAetC,OAJK5B,EAAE6B,WACHJ,EAAYA,EAAUK,eAGnBL,EAIX,OAAIpF,EAAK2D,EAAE4B,OACAvF,EAAK2D,EAAE4B,OAGdhE,EAAaoC,EAAE4B,OACRhE,EAAaoC,EAAE4B,OAQnBF,OAAOC,aAAa3B,EAAE4B,OAAOE,cA8ExC,SAASC,EAAYjB,GACjB,MAAc,SAAPA,GAAyB,QAAPA,GAAwB,OAAPA,GAAuB,QAAPA,EAmC9D,SAASkB,EAAgBlB,EAAKmB,EAAW1C,GAcrC,OAVKA,IACDA,EA/BR,WACI,IAAKnD,EAED,IAAK,IAAI0E,KADT1E,EAAe,GACCC,EAIRyE,EAAM,IAAMA,EAAM,KAIlBzE,EAAK3D,eAAeoI,KACpB1E,EAAaC,EAAKyE,IAAQA,GAItC,OAAO1E,EAeM8F,GAAiBpB,GAAO,UAAY,YAKnC,YAAVvB,GAAwB0C,EAAUtH,SAClC4E,EAAS,WAGNA,EAyBX,SAAS4C,EAAYC,EAAa7C,GAC9B,IAAIF,EACAyB,EACArG,EACAwH,EAAY,GAMhB,IAFA5C,EAxBJ,SAAyB+C,GACrB,MAAoB,MAAhBA,EACO,CAAC,MAGZA,EAAcA,EAAYC,QAAQ,SAAU,UACzBC,MAAM,KAkBlBC,CAAgBH,GAElB3H,EAAI,EAAGA,EAAI4E,EAAK1E,SAAUF,EAC3BqG,EAAMzB,EAAK5E,GAGPqE,EAAiBgC,KACjBA,EAAMhC,EAAiBgC,IAMvBvB,GAAoB,YAAVA,GAAwBV,EAAWiC,KAC7CA,EAAMjC,EAAWiC,GACjBmB,EAAUxI,KAAK,UAIfsI,EAAYjB,IACZmB,EAAUxI,KAAKqH,GAQvB,MAAO,CACHA,IAAKA,EACLmB,UAAWA,EACX1C,OALJA,EAASyC,EAAgBlB,EAAKmB,EAAW1C,IAS7C,SAASa,EAAWH,EAASuC,GACzB,OAAgB,OAAZvC,GAAoBA,IAAY9D,IAIhC8D,IAAYuC,GAITpC,EAAWH,EAAQwC,WAAYD,IAG1C,SAASrD,EAAUuD,GACf,IAAIlD,EAAOvG,KAIX,GAFAyJ,EAAgBA,GAAiBvG,IAE3BqD,aAAgBL,GAClB,OAAO,IAAIA,EAAUuD,GAQzBlD,EAAKa,OAASqC,EAOdlD,EAAKM,WAAa,GAOlBN,EAAKI,WAAa,GAQlB,IAOI+C,EAPAC,EAAkB,GAclBC,GAAmB,EAOnBC,GAAsB,EAQtBC,GAAsB,EAQ1B,SAASC,EAAgBC,GACrBA,EAAaA,GAAc,GAE3B,IACInC,EADAoC,GAAkB,EAGtB,IAAKpC,KAAO8B,EACJK,EAAWnC,GACXoC,GAAkB,EAGtBN,EAAgB9B,GAAO,EAGtBoC,IACDH,GAAsB,GAgB9B,SAASI,EAAY1B,EAAWQ,EAAWjC,EAAGoD,EAAchB,EAAaiB,GACrE,IAAI5I,EACA6E,EAhTagE,EAAYC,EAiTzBC,EAAU,GACVjE,EAASS,EAAEqB,KAGf,IAAK7B,EAAKM,WAAW2B,GACjB,MAAO,GAUX,IANc,SAAVlC,GAAqBwC,EAAYN,KACjCQ,EAAY,CAACR,IAKZhH,EAAI,EAAGA,EAAI+E,EAAKM,WAAW2B,GAAW9G,SAAUF,EAKjD,GAJA6E,EAAWE,EAAKM,WAAW2B,GAAWhH,IAIjC2I,IAAgB9D,EAASmE,KAAOb,EAAgBtD,EAASmE,MAAQnE,EAAS+D,QAM3E9D,GAAUD,EAASC,SAWR,YAAVA,IAAyBS,EAAE0D,UAAY1D,EAAE2D,UAtVjCL,EAsV6DrB,EAtVjDsB,EAsV4DjE,EAAS2C,UArV/FqB,EAAWM,OAAOC,KAAK,OAASN,EAAWK,OAAOC,KAAK,OAqVoD,CAOtG,IAAIC,GAAeV,GAAgB9D,EAASyE,OAAS3B,EACjD4B,EAAiBZ,GAAgB9D,EAASmE,KAAOL,GAAgB9D,EAAS+D,OAASA,GACnFS,GAAeE,IACfxE,EAAKM,WAAW2B,GAAWwC,OAAOxJ,EAAG,GAGzC+I,EAAQ/J,KAAK6F,GAIrB,OAAOkE,EAaX,SAASU,EAAc5E,EAAUU,EAAG+D,EAAOI,GAGnC3E,EAAKO,aAAaC,EAAGA,EAAEK,QAAUL,EAAEoE,WAAYL,EAAOI,KAI/B,IAAvB7E,EAASU,EAAG+D,KArVxB,SAAyB/D,GACjBA,EAAEqE,eACFrE,EAAEqE,iBAINrE,EAAEsE,aAAc,EAgVRC,CAAgBvE,GAvU5B,SAA0BA,GAClBA,EAAEwE,gBACFxE,EAAEwE,kBAINxE,EAAEyE,cAAe,EAkUTC,CAAiB1E,IAkGzB,SAAS2E,EAAgB3E,GAIE,iBAAZA,EAAE4B,QACT5B,EAAE4B,MAAQ5B,EAAE4E,SAGhB,IAAInD,EAAYD,EAAoBxB,GAG/ByB,IAKS,SAAVzB,EAAEqB,MAAmBwB,IAAqBpB,EAK9CjC,EAAKkB,UAAUe,EA1evB,SAAyBzB,GACrB,IAAIiC,EAAY,GAkBhB,OAhBIjC,EAAE6B,UACFI,EAAUxI,KAAK,SAGfuG,EAAE6E,QACF5C,EAAUxI,KAAK,OAGfuG,EAAE2D,SACF1B,EAAUxI,KAAK,QAGfuG,EAAE0D,SACFzB,EAAUxI,KAAK,QAGZwI,EAuduB6C,CAAgB9E,GAAIA,GAJ1C6C,GAAmB,GAkG3B,SAASkC,EAAY3C,EAAa9C,EAAUC,EAAQ6D,EAAcC,GAG9D7D,EAAKI,WAAWwC,EAAc,IAAM7C,GAAUD,EAK9C,IACI0F,EADAb,GAFJ/B,EAAcA,EAAYC,QAAQ,OAAQ,MAEfC,MAAM,KAK7B6B,EAASxJ,OAAS,EAlF1B,SAAuBoJ,EAAO1E,EAAMC,EAAUC,GAa1C,SAAS0F,EAAkBC,GACvB,OAAO,WACHnC,EAAsBmC,IACpBtC,EAAgBmB,GA7B1BoB,aAAaxC,GACbA,EAAcyC,WAAWpC,EAAiB,MAwC1C,SAASqC,EAAkBrF,GACvBkE,EAAc5E,EAAUU,EAAG+D,GAKZ,UAAXxE,IACAsD,EAAmBrB,EAAoBxB,IAK3CoF,WAAWpC,EAAiB,IApChCJ,EAAgBmB,GAAS,EAgDzB,IAAK,IAAItJ,EAAI,EAAGA,EAAI4E,EAAK1E,SAAUF,EAAG,CAClC,IACI6K,EADU7K,EAAI,IAAM4E,EAAK1E,OACG0K,EAAoBJ,EAAkB1F,GAAU4C,EAAY9C,EAAK5E,EAAI,IAAI8E,QACzGwF,EAAY1F,EAAK5E,GAAI6K,EAAiB/F,EAAQwE,EAAOtJ,IA4BrD8K,CAAcnD,EAAa+B,EAAU7E,EAAUC,IAInDyF,EAAO7C,EAAYC,EAAa7C,GAIhCC,EAAKM,WAAWkF,EAAKlE,KAAOtB,EAAKM,WAAWkF,EAAKlE,MAAQ,GAGzDqC,EAAY6B,EAAKlE,IAAKkE,EAAK/C,UAAW,CAACZ,KAAM2D,EAAKzF,QAAS6D,EAAchB,EAAaiB,GAQtF7D,EAAKM,WAAWkF,EAAKlE,KAAKsC,EAAe,UAAY,QAAQ,CACzD9D,SAAUA,EACV2C,UAAW+C,EAAK/C,UAChB1C,OAAQyF,EAAKzF,OACbkE,IAAKL,EACLC,MAAOA,EACPU,MAAO3B,KAhPf5C,EAAKmB,WAAa,SAASc,EAAWQ,EAAWjC,GAC7C,IACIvF,EADA+K,EAAYrC,EAAY1B,EAAWQ,EAAWjC,GAE9CiD,EAAa,GACbwC,EAAW,EACXC,GAA4B,EAGhC,IAAKjL,EAAI,EAAGA,EAAI+K,EAAU7K,SAAUF,EAC5B+K,EAAU/K,GAAGgJ,MACbgC,EAAWE,KAAKC,IAAIH,EAAUD,EAAU/K,GAAG4I,QAKnD,IAAK5I,EAAI,EAAGA,EAAI+K,EAAU7K,SAAUF,EAOhC,GAAI+K,EAAU/K,GAAGgJ,IAAjB,CAUI,GAAI+B,EAAU/K,GAAG4I,OAASoC,EACtB,SAGJC,GAA4B,EAG5BzC,EAAWuC,EAAU/K,GAAGgJ,KAAO,EAC/BS,EAAcsB,EAAU/K,GAAG6E,SAAUU,EAAGwF,EAAU/K,GAAGsJ,MAAOyB,EAAU/K,GAAGgJ,UAMxEiC,GACDxB,EAAcsB,EAAU/K,GAAG6E,SAAUU,EAAGwF,EAAU/K,GAAGsJ,OAyB7D,IAAI8B,EAA+B,YAAV7F,EAAEqB,MAAsByB,EAC7C9C,EAAEqB,MAAQ0B,GAAwBhB,EAAYN,IAAeoE,GAC7D7C,EAAgBC,GAGpBH,EAAsB4C,GAAuC,WAAV1F,EAAEqB,MA+KzD7B,EAAKC,cAAgB,SAASqG,EAAcxG,EAAUC,GAClD,IAAK,IAAI9E,EAAI,EAAGA,EAAIqL,EAAanL,SAAUF,EACvCsK,EAAYe,EAAarL,GAAI6E,EAAUC,IAK/C6B,EAAUsB,EAAe,WAAYiC,GACrCvD,EAAUsB,EAAe,UAAWiC,GACpCvD,EAAUsB,EAAe,QAASiC,IAp2B1C,CA2gCsB,oBAAXzI,OAAyBA,OAAS,KAAyB,oBAAXA,OAAyBC,SAAW,QChiC3F4J,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUhK,QAG3C,IAAID,EAAS+J,EAAyBE,GAAY,CAGjDhK,QAAS,IAOV,OAHAiK,EAAoBD,GAAUjK,EAAQA,EAAOC,QAAS+J,GAG/ChK,EAAOC,QCnBf+J,EAAoBG,EAAKnK,IACxB,IAAIoK,EAASpK,GAAUA,EAAOqK,WAC7B,IAAMrK,EAAgB,QACtB,IAAMA,EAEP,OADAgK,EAAoBM,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRJ,EAAoBM,EAAI,CAACrK,EAASuK,KACjC,IAAI,IAAI1F,KAAO0F,EACXR,EAAoBS,EAAED,EAAY1F,KAASkF,EAAoBS,EAAExK,EAAS6E,IAC5EtI,OAAOkO,eAAezK,EAAS6E,EAAK,CAAE6F,YAAY,EAAMC,IAAKJ,EAAW1F,MCJ3EkF,EAAoBS,EAAI,CAACI,EAAKC,IAAStO,OAAOC,UAAUC,eAAeyB,KAAK0M,EAAKC,G,2DCIlE,MAAMC,EACpBC,YAAYC,GACX,IAAIxM,EAAGkB,EAMP,IALA1C,KAAKe,OAAS,IAAIJ,KAClBX,KAAKiO,KAAO,GACZjO,KAAKkO,OAASF,EAAQE,OACtBlO,KAAKmO,MAAQH,EAAQG,MACrBnO,KAAKoO,KAAOJ,EAAQI,KACf5M,EAAI,EAAGA,EAAIxB,KAAKkO,OAAQ1M,IAE5B,IADAxB,KAAKiO,KAAKzM,GAAK,GACVkB,EAAI,EAAGA,EAAI1C,KAAKmO,MAAOzL,IAC3B1C,KAAKiO,KAAKzM,GAAGhB,KAAK,CACjB6N,MAAO,KACPC,KAAK,IAIRtO,KAAKuO,cAAgB,GAGtBC,cACC,IAAIhN,EAAGkB,EAAUwK,EAAGuB,EAAVhN,EAAI,EACd,IAAKD,EAAI,EAAGA,EAAIxB,KAAKkO,OAAQ1M,IAAK,CACjC,IAAIkN,GAAO,EACX,IAAKhM,EAAI,EAAGA,EAAI1C,KAAKmO,MAAOzL,IACtB1C,KAAKiO,KAAKzM,GAAGkB,GAAG4L,MACpBI,GAAO,GAGT,GAAIA,EAAM,CAGT,IAFAjN,IACAyL,EAAI1L,EAAI,EACD0L,KACNlN,KAAKiO,KAAKf,GAAKlN,KAAKiO,KAAKf,EAAE,GAG5B,IADAlN,KAAKiO,KAAK,GAAK,GACVQ,EAAI,EAAGA,EAAIzO,KAAKmO,MAAOM,IAC3BzO,KAAKiO,KAAK,GAAGzN,KAAK,CACjB6N,MAAO,KACPC,KAAK,KAKL7M,GACHzB,KAAKe,OAAOe,KAAK,QAASL,GAI5BkN,UAAUC,GACT,IAAIN,GAAM,EAsBV,OArBAM,EAAUC,KAAKC,IACVA,EAAIC,EAAI,IAGRD,EAAIC,GAAK/O,KAAKkO,QAIdY,EAAIE,EAAI,GAAKF,EAAIE,GAAKhP,KAAKmO,MAH9BG,GAAM,OAOyB,IAArBtO,KAAKiO,KAAKa,EAAIC,GAIrB/O,KAAKiO,KAAKa,EAAIC,GAAGD,EAAIE,GAAGV,MAC3BA,GAAM,GAJNA,GAAM,MAQDA,EAGRW,OAAOnP,GACN,IAAI0B,EAAGkB,EAEP,IADA5C,EAAQoP,YAAc,OACjB1N,EAAI,EAAGA,EAAIxB,KAAKiO,KAAKvM,OAAQF,IACjC,IAAKkB,EAAI,EAAGA,EAAI1C,KAAKiO,KAAKzM,GAAGE,OAAQgB,IACpC5C,EAAQqP,YACRrP,EAAQsP,KAAKpP,KAAKoO,KAAO1L,EAAG1C,KAAKoO,KAAO5M,EAAGxB,KAAKoO,KAAMpO,KAAKoO,MACvDpO,KAAKiO,KAAKzM,GAAGkB,GAAG2L,OACnBvO,EAAQuP,UAAYrP,KAAKiO,KAAKzM,GAAGkB,GAAG2L,MACpCvO,EAAQwP,QAERxP,EAAQyP,SAMZC,SAASC,GACRzP,KAAKuO,cAAcM,KAAKC,IACnBA,EAAIC,EAAI,EACX/O,KAAKe,OAAOe,KAAK,OAGlB9B,KAAKiO,KAAKa,EAAIC,GAAGD,EAAIE,GAAGV,KAAM,KAE/BtO,KAAKwO,cACLxO,KAAKuO,cAAgB,GACrBvO,KAAKyP,MAAQA,EAGdC,YAAYd,GACX5O,KAAKuO,cAAcM,KAAKC,IACnBA,EAAIC,EAAI,IAGZ/O,KAAKiO,KAAKa,EAAIC,GAAGD,EAAIE,GAAGX,MAAQ,SAEjCrO,KAAKuO,cAAgBK,EACrBA,EAAUC,KAAKC,IACVA,EAAIC,EAAI,IAGZ/O,KAAKiO,KAAKa,EAAIC,GAAGD,EAAIE,GAAGX,MAAQrO,KAAKyP,MAAMpB,WCrH9C,MAAMsB,EAAS,CACd,CACCC,OAAQ,IACRvB,MAAO,OACPwB,MAAO,CACN,CAAC,EAAG,EAAG,EAAG,KAGZ,CACCD,OAAQ,IACRvB,MAAO,OACPwB,MAAO,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGT,CACCD,OAAQ,IACRvB,MAAO,SACPwB,MAAO,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGT,CACCD,OAAQ,IACRvB,MAAO,SACPwB,MAAO,CACN,CAAC,EAAG,GACJ,CAAC,EAAG,KAGN,CACCD,OAAQ,IACRvB,MAAO,OACPwB,MAAO,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGT,CACCD,OAAQ,IACRvB,MAAO,SACPwB,MAAO,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGT,CACCD,OAAQ,IACRvB,MAAO,MACPwB,MAAO,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,MAKK,MAAMC,EACpB/B,YAAYC,GACXhO,KAAKe,OAAS,IAAIJ,KAClBX,KAAKoO,KAAOJ,EAAQI,KACpBpO,KAAKmO,MAAQH,EAAQG,MACrBnO,KAAK+P,QAAU,GAGhBC,OAAOH,EAAOb,EAAGD,GAChB,MAAO,CACNH,UAAW5O,KAAKiQ,cAChBJ,MAAOA,EACPb,EAAGA,EACHD,EAAGA,GAILmB,MAAMC,GACLnQ,KAAKe,OAAOe,KAAK,OAAQ9B,KAAKgQ,OAAOhQ,KAAKyP,MAAMI,MAAO7P,KAAKgP,EAAGhP,KAAK+O,GAAIoB,GAGzEC,SACCpQ,KAAK+P,QAAU/P,KAAKgQ,OAAOhQ,KAAKyP,MAAMI,MAAO7P,KAAKgP,EAAGhP,KAAK+O,GAC1D/O,KAAKe,OAAOe,KAAK,YAAa9B,KAAK+P,QAAQnB,WAG5CyB,OACCrQ,KAAKyP,MAAMI,MAAQ7P,KAAK+P,QAAQF,MAChC7P,KAAKgP,EAAIhP,KAAK+P,QAAQf,EACtBhP,KAAK+O,EAAI/O,KAAK+P,QAAQhB,EAGvBkB,cACC,IAAIzO,EAAGkB,EAAGkM,EAAY,GAAII,EAAIhP,KAAKgP,EAAGD,EAAI/O,KAAK+O,EAC/C,IAAKvN,EAAI,EAAGA,EAAIxB,KAAKyP,MAAMI,MAAMnO,OAAQF,IAAK,CAC7C,IAAKkB,EAAI,EAAGA,EAAI1C,KAAKyP,MAAMI,MAAMrO,GAAGE,OAAQgB,IACvC1C,KAAKyP,MAAMI,MAAMrO,GAAGkB,IACvBkM,EAAUpO,KAAK,CACdwO,EAAGA,EACHD,EAAGA,IAGLC,IAEDA,EAAIhP,KAAKgP,EACTD,IAED,OAAOH,EAGR9G,OAQC,OANA9H,KAAKgP,EAAIhP,KAAKmO,MAAQ,EACtBnO,KAAK+O,GAAI,EAET/O,KAAKyP,MAAQE,EAAOjD,KAAK4D,MAAM5D,KAAK6D,SAAWZ,EAAOjO,SACtD1B,KAAKe,OAAOe,KAAK,QAAS9B,KAAKyP,OAEvBzP,KAAKyP,MAAMG,QACnB,IAAK,IACJ5P,KAAKgP,GAAK,EACVhP,KAAK+O,IACL,MACD,IAAK,IAGL,IAAK,IACJ/O,KAAKgP,GAAK,EACV,MACD,IAAK,IACJhP,KAAKgP,GAAK,EACV,MACD,IAAK,IAGL,IAAK,IACJhP,KAAKgP,GAAK,EACV,MACD,IAAK,IACL,QACChP,KAAKgP,GAAK,EAIXhP,KAAKoQ,SAGNI,KAAKC,GACJ,IAAIN,EAAW,GACf,OAAQM,GACR,IAAK,OACJzQ,KAAKgP,IACL,MACD,IAAK,QACJhP,KAAKgP,IACL,MACD,IAAK,OACL,QACCmB,EAAW,SACXnQ,KAAK+O,IAGN/O,KAAKkQ,MAAMC,GAGZO,SACC,IAAIlP,EAAGkB,EAAGmN,EAAQ,GAClB,IAAKrO,EAAIxB,KAAKyP,MAAMI,MAAMnO,OAAS,EAAGF,GAAK,EAAGA,IAC7C,IAAKkB,EAAI,EAAGA,EAAI1C,KAAKyP,MAAMI,MAAMrO,GAAGE,OAAQgB,SACnB,IAAbmN,EAAMnN,KAChBmN,EAAMnN,GAAK,IAEZmN,EAAMnN,GAAGlC,KAAKR,KAAKyP,MAAMI,MAAMrO,GAAGkB,IAGpC1C,KAAKyP,MAAMI,MAAQA,EACnB7P,KAAKkQ,QAGNS,SACC3Q,KAAK+O,IACL/O,KAAKkQ,MAAM,WCjLb,MAAMlC,EAAU,CACdE,OAAQ,GACRE,KAAM,GACND,MAAO,GACPyC,QAAS,KAGLC,EAAS3N,SAAS4N,eAAe,UAEvCD,EAAO1C,MAAQH,EAAQG,MAAQH,EAAQI,KAAOJ,EAAQ4C,QACtDC,EAAO3C,OAASF,EAAQE,OAASF,EAAQI,KACzCyC,EAAOE,MAAMC,QAAU,QACvBH,EAAOE,MAAME,OAAS,SAEtB,MAAMnR,EAAU+Q,EAAOK,WAAW,MAElC,IAAIC,EACFC,EACAnD,EAGAoD,EACAC,EAFAC,EAAS,GAIX,MAAMC,EAAW,KACfJ,EAAUnO,OAAOwO,sBAAsBD,GACvC1R,EAAQqP,YACRrP,EAAQsP,KAAK,EAAG,EAAGyB,EAAO1C,MAAQH,EAAQ4C,QAASC,EAAO3C,QAC1DpO,EAAQuP,UAAY,OACpBvP,EAAQwP,OACRxP,EAAQqP,YACRrP,EAAQsP,KACNyB,EAAO1C,MAAQH,EAAQ4C,QACvB,EACA5C,EAAQ4C,QACRC,EAAO3C,QAETpO,EAAQuP,UAAY,OACpBvP,EAAQwP,OACRxP,EAAQqP,YACRrP,EAAQ4R,KAAO,kBACf5R,EAAQ6R,UAAY,SACpB7R,EAAQ8R,aAAe,SACvB9R,EAAQuP,UAAY,OACpBvP,EAAQ+R,SACN,SACAhB,EAAO1C,MAAQH,EAAQ4C,QAAU5C,EAAQ4C,QAAU,EA3B3C,IA8BV9Q,EAAQ+R,SACNR,EACAR,EAAO1C,MAAQH,EAAQ4C,QAAU5C,EAAQ4C,QAAU,EACnDkB,IAEF7D,EAAKgB,OAAOnP,IAGRiS,EAAWtC,IACfxB,EAAKuB,SAASC,IAGVuC,EAAepD,IACnBX,EAAKyB,YAAYd,IAGbqD,EAAS,CAACC,EAAU/B,KACpBlC,EAAKU,UAAUuD,EAAStD,YAC1B2C,EAAO,GAAGlB,OACO,WAAbF,IACFoB,EAAO,GAAGxQ,OAAOwB,eAAe,QAASwP,GACzCR,EAAO,GAAGxQ,OAAOwB,eAAe,YAAayP,GAC7CT,EAAO,GAAGxQ,OAAOwB,eAAe,OAAQwP,GACxCR,EAAOY,QAAQ,IAAIrC,EAAU9B,IAC7BuD,EAAO,GAAGxQ,OAAO4B,GAAG,QAASoP,GAC7BR,EAAO,GAAGxQ,OAAO4B,GAAG,YAAaqP,GACjCT,EAAO,GAAGxQ,OAAO4B,GAAG,OAAQsP,GAC5BV,EAAO,GAAGzJ,SAGZyJ,EAAO,GAAGnB,UAIRgC,EAAWC,IACfhB,GAAUgB,EAAQA,GAGdC,EAAQ,KAERlB,IACFnO,OAAOsP,qBAAqBnB,GAC5BA,EAAU,MAEZtR,EAAQqP,YACRrP,EAAQsP,KACN,EACAyB,EAAO3C,OAAS,EAAIsE,GACpB3B,EAAO1C,MAAQH,EAAQ4C,QATT,IAYhB9Q,EAAQuP,UAAY,wBACpBvP,EAAQwP,OAERxP,EAAQqP,YACRrP,EAAQ4R,KAAO,kBACf5R,EAAQ6R,UAAY,SACpB7R,EAAQ8R,aAAe,SACvB9R,EAAQuP,UAAY,OACpBvP,EAAQ+R,SACN,aACChB,EAAO1C,MAAQH,EAAQ4C,SAAW,EACnCC,EAAO3C,OAAS,IAIdyC,EAAS,KACTW,IACFpF,aAAaoF,GACbA,EAAU,MAEZC,EAAO,GAAGZ,SACVW,EAAUnF,WAAWwE,EAAQQ,IAGzBrJ,EAAO,KACPsJ,IACFnO,OAAOsP,qBAAqBnB,GAC5BA,EAAU,MAGRE,IACFpF,aAAaoF,GACbA,EAAU,MAGZH,EAAW,IACXE,EAAS,EAELpD,IACFA,EAAKlN,OAAOwB,eAAe,QAAS6P,GACpCnE,EAAKlN,OAAOwB,eAAe,MAAO+P,IAEpCrE,EAAO,IAAIH,EAAKE,GAChBC,EAAKlN,OAAO4B,GAAG,QAASyP,GACxBnE,EAAKlN,OAAO4B,GAAG,MAAO2P,GAElBf,EAAO,KACTA,EAAO,GAAGxQ,OAAOwB,eAAe,QAASwP,GACzCR,EAAO,GAAGxQ,OAAOwB,eAAe,YAAayP,GAC7CT,EAAO,GAAGxQ,OAAOwB,eAAe,OAAQwP,GACxCR,EAAS,IAEXA,EAAOY,QAAQ,IAAIrC,EAAU9B,IAC7BuD,EAAO,GAAGxQ,OAAO4B,GAAG,QAASoP,GAC7BR,EAAO,GAAGxQ,OAAO4B,GAAG,YAAaqP,GACjCT,EAAO,GAAGxQ,OAAO4B,GAAG,OAAQsP,GAC5BV,EAAO,GAAGzJ,OAEVsJ,EAAUnO,OAAOwO,sBAAsBD,GACvCb,KAGF7I,ICtKe,UAAkB,KAAE0I,EAAF,QAAQiC,EAAR,OAAiB/B,IAChDxK,SAAe,MAAM,KACnBwK,OAGFxK,SAAe,SAAS,KACtBsK,EAAK,YAGPtK,SAAe,QAAQ,KACrBsK,EAAK,WAGPtK,SAAe,QAAQ,KACrBsK,EAAK,WAGPtK,SAAe,SAAS,KACtBuM,OAGFvM,SAAe,SAAS,KACtBuM,ODkJJC,CAAS,CACPlC,KAAOC,IACDa,IACFpF,aAAaoF,GACbA,EAAU,MAEZA,EAAUnF,WAAWwE,EAAQQ,GAC7BI,EAAO,GAAGf,KAAKC,IAEjBgC,QAAS3K,EACT4I,OAAQ,KACFY,IACFpF,aAAaoF,GACbA,EAAU,MAEZA,EAAUnF,WAAWwE,EAAQQ,GAC7BI,EAAO,GAAGb,a","file":"tetris.js","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","\"use strict\";\n\nimport EventEmitter from 'eventemitter3';\n\nexport default class Grid {\n\tconstructor(options) {\n\t\tlet i, j;\n\t\tthis.events = new EventEmitter();\n\t\tthis.grid = [];\n\t\tthis.height = options.height;\n\t\tthis.width = options.width;\n\t\tthis.size = options.size;\n\t\tfor (i = 0; i < this.height; i++) {\n\t\t\tthis.grid[i] = [];\n\t\t\tfor (j = 0; j < this.width; j++) {\n\t\t\t\tthis.grid[i].push({\n\t\t\t\t\tcolor: null,\n\t\t\t\t\thit: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.prevPositions = [];\n\t}\n\n\t_checkLines() {\n\t\tlet i, j, l = 0, n, p;\n\t\tfor (i = 0; i < this.height; i++) {\n\t\t\tlet full = true;\n\t\t\tfor (j = 0; j < this.width; j++) {\n\t\t\t\tif (!this.grid[i][j].hit) {\n\t\t\t\t\tfull = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (full) {\n\t\t\t\tl++;\n\t\t\t\tn = i + 1;\n\t\t\t\twhile (n--) {\n\t\t\t\t\tthis.grid[n] = this.grid[n-1];\n\t\t\t\t}\n\t\t\t\tthis.grid[0] = [];\n\t\t\t\tfor (p = 0; p < this.width; p++) {\n\t\t\t\t\tthis.grid[0].push({\n\t\t\t\t\t\tcolor: null,\n\t\t\t\t\t\thit: false,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (l) {\n\t\t\tthis.events.emit('score', l);\n\t\t}\n\t}\n\n\tcollision(positions) {\n\t\tlet hit = false;\n\t\tpositions.map((pos) => {\n\t\t\tif (pos.y < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pos.y >= this.height) {\n\t\t\t\thit = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pos.x < 0 || pos.x >= this.width) {\n\t\t\t\thit = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof this.grid[pos.y] === 'undefined') {\n\t\t\t\thit = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.grid[pos.y][pos.x].hit) {\n\t\t\t\thit = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\treturn hit;\n\t}\n\n\trender(context) {\n\t\tlet i, j;\n\t\tcontext.strokeStyle = '#111';\n\t\tfor (i = 0; i < this.grid.length; i++) {\n\t\t\tfor (j = 0; j < this.grid[i].length; j++) {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.rect(this.size * j, this.size * i, this.size, this.size);\n\t\t\t\tif (this.grid[i][j].color) {\n\t\t\t\t\tcontext.fillStyle = this.grid[i][j].color;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t} else {\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetPiece(piece) {\n\t\tthis.prevPositions.map((pos) => {\n\t\t\tif (pos.y < 0) {\n\t\t\t\tthis.events.emit('end');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.grid[pos.y][pos.x].hit = true;\n\t\t});\n\t\tthis._checkLines();\n\t\tthis.prevPositions = [];\n\t\tthis.piece = piece;\n\t}\n\n\tsetPosition(positions) {\n\t\tthis.prevPositions.map((pos) => {\n\t\t\tif (pos.y < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.grid[pos.y][pos.x].color = null;\n\t\t});\n\t\tthis.prevPositions = positions;\n\t\tpositions.map((pos) => {\n\t\t\tif (pos.y < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.grid[pos.y][pos.x].color = this.piece.color;\n\t\t});\n\t}\n}\n","\"use strict\";\n\nimport EventEmitter from 'eventemitter3';\n\nconst shapes = [\n\t{\n\t\tsymbol: 'I',\n\t\tcolor: 'cyan',\n\t\tshape: [\n\t\t\t[1, 1, 1, 1,],\n\t\t],\n\t},\n\t{\n\t\tsymbol: 'J',\n\t\tcolor: 'blue',\n\t\tshape: [\n\t\t\t[1, 1, 1,],\n\t\t\t[0, 0, 1,],\n\t\t],\n\t},\n\t{\n\t\tsymbol: 'L',\n\t\tcolor: 'orange',\n\t\tshape: [\n\t\t\t[1, 1, 1,],\n\t\t\t[1, 0, 0,],\n\t\t],\n\t},\n\t{\n\t\tsymbol: 'O',\n\t\tcolor: 'yellow',\n\t\tshape: [\n\t\t\t[1, 1,],\n\t\t\t[1, 1,],\n\t\t],\n\t},\n\t{\n\t\tsymbol: 'S',\n\t\tcolor: 'lime',\n\t\tshape: [\n\t\t\t[0, 1, 1,],\n\t\t\t[1, 1, 0,],\n\t\t],\n\t},\n\t{\n\t\tsymbol: 'T',\n\t\tcolor: 'purple',\n\t\tshape: [\n\t\t\t[1, 1, 1,],\n\t\t\t[0, 1, 0,],\n\t\t],\n\t},\n\t{\n\t\tsymbol: 'Z',\n\t\tcolor: 'red',\n\t\tshape: [\n\t\t\t[1, 1, 0,],\n\t\t\t[0, 1, 1,],\n\t\t],\n\t},\n];\n\nexport default class Tetrimino {\n\tconstructor(options) {\n\t\tthis.events = new EventEmitter();\n\t\tthis.size = options.size;\n\t\tthis.width = options.width;\n\t\tthis.storage = {};\n\t}\n\n\t_store(shape, x, y) {\n\t\treturn {\n\t\t\tpositions: this.getPosition(),\n\t\t\tshape: shape,\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\t}\n\n\t_test(scenario) {\n\t\tthis.events.emit('test', this._store(this.piece.shape, this.x, this.y), scenario);\n\t}\n\n\taccept() {\n\t\tthis.storage = this._store(this.piece.shape, this.x, this.y);\n\t\tthis.events.emit('positions', this.storage.positions);\n\t}\n\n\tdeny() {\n\t\tthis.piece.shape = this.storage.shape;\n\t\tthis.x = this.storage.x;\n\t\tthis.y = this.storage.y;\n\t}\n\n\tgetPosition() {\n\t\tlet i, j, positions = [], x = this.x, y = this.y;\n\t\tfor (i = 0; i < this.piece.shape.length; i++) {\n\t\t\tfor (j = 0; j < this.piece.shape[i].length; j++) {\n\t\t\t\tif (this.piece.shape[i][j]) {\n\t\t\t\t\tpositions.push({\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tx++;\n\t\t\t}\n\t\t\tx = this.x;\n\t\t\ty++;\n\t\t}\n\t\treturn positions;\n\t}\n\n\tinit() {\n\t\tconst startPosition = -3;\n\t\tthis.x = this.width / 2;\n\t\tthis.y = 0 + startPosition;\n\n\t\tthis.piece = shapes[Math.floor(Math.random() * shapes.length)];\n\t\tthis.events.emit('piece', this.piece);\n\n\t\tswitch (this.piece.symbol) {\n\t\tcase 'I':\n\t\t\tthis.x -= 2;\n\t\t\tthis.y++;\n\t\t\tbreak;\n\t\tcase 'J':\n\t\t\tthis.x -= 2;\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tthis.x -= 2;\n\t\t\tbreak;\n\t\tcase 'O':\n\t\t\tthis.x -= 1;\n\t\t\tbreak;\n\t\tcase 'S':\n\t\t\tthis.x -= 2;\n\t\t\tbreak;\n\t\tcase 'T':\n\t\t\tthis.x -= 2;\n\t\t\tbreak;\n\t\tcase 'Z':\n\t\tdefault:\n\t\t\tthis.x -= 2;\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.accept();\n\t}\n\n\tmove(direction) {\n\t\tlet scenario = '';\n\t\tswitch (direction) {\n\t\tcase 'LEFT':\n\t\t\tthis.x--;\n\t\t\tbreak;\n\t\tcase 'RIGHT':\n\t\t\tthis.x++;\n\t\t\tbreak;\n\t\tcase 'DOWN':\n\t\tdefault:\n\t\t\tscenario = 'update';\n\t\t\tthis.y++;\n\t\t\tbreak;\n\t\t}\n\t\tthis._test(scenario);\n\t}\n\n\trotate() {\n\t\tlet i, j, shape = [];\n\t\tfor (i = this.piece.shape.length - 1; i >= 0; i--) {\n\t\t\tfor (j = 0; j < this.piece.shape[i].length; j++) {\n\t\t\t\tif (typeof shape[j] === 'undefined') {\n\t\t\t\t\tshape[j] = [];\n\t\t\t\t}\n\t\t\t\tshape[j].push(this.piece.shape[i][j]);\n\t\t\t}\n\t\t}\n\t\tthis.piece.shape = shape;\n\t\tthis._test();\n\t}\n\n\tupdate() {\n\t\tthis.y++;\n\t\tthis._test('update');\n\t}\n}\n","\"use strict\";\n\nimport bindKeys from \"./controls\";\nimport Grid from \"./Grid\";\nimport Tetrimino from \"./Tetrimino\";\n\nconst options = {\n  height: 20,\n  size: 30,\n  width: 10,\n  sidebar: 100,\n};\n\nconst canvas = document.getElementById(\"tetris\");\n\ncanvas.width = options.width * options.size + options.sidebar;\ncanvas.height = options.height * options.size;\ncanvas.style.display = \"block\";\ncanvas.style.margin = \"0 auto\";\n\nconst context = canvas.getContext(\"2d\");\n\nlet cooldown,\n  frameId,\n  grid,\n  padding = 25,\n  pieces = [],\n  points,\n  timeout;\n\nconst gameLoop = () => {\n  frameId = window.requestAnimationFrame(gameLoop);\n  context.beginPath();\n  context.rect(0, 0, canvas.width - options.sidebar, canvas.height);\n  context.fillStyle = \"#000\";\n  context.fill();\n  context.beginPath();\n  context.rect(\n    canvas.width - options.sidebar,\n    0,\n    options.sidebar,\n    canvas.height\n  );\n  context.fillStyle = \"#222\";\n  context.fill();\n  context.beginPath();\n  context.font = \"16px sans-serif\";\n  context.textAlign = \"center\";\n  context.textBaseline = \"middle\";\n  context.fillStyle = \"#ddd\";\n  context.fillText(\n    \"points\",\n    canvas.width - options.sidebar + options.sidebar / 2,\n    padding\n  );\n  context.fillText(\n    points,\n    canvas.width - options.sidebar + options.sidebar / 2,\n    padding * 2\n  );\n  grid.render(context);\n};\n\nconst onPiece = (piece) => {\n  grid.setPiece(piece);\n};\n\nconst onPositions = (positions) => {\n  grid.setPosition(positions);\n};\n\nconst onTest = (position, scenario) => {\n  if (grid.collision(position.positions)) {\n    pieces[0].deny();\n    if (scenario === \"update\") {\n      pieces[0].events.removeListener(\"piece\", onPiece);\n      pieces[0].events.removeListener(\"positions\", onPositions);\n      pieces[0].events.removeListener(\"test\", onPiece);\n      pieces.unshift(new Tetrimino(options));\n      pieces[0].events.on(\"piece\", onPiece);\n      pieces[0].events.on(\"positions\", onPositions);\n      pieces[0].events.on(\"test\", onTest);\n      pieces[0].init();\n    }\n  } else {\n    pieces[0].accept();\n  }\n};\n\nconst onScore = (lines) => {\n  points += lines * lines;\n};\n\nconst onEnd = () => {\n  let boxHeight = 60;\n  if (frameId) {\n    window.cancelAnimationFrame(frameId);\n    frameId = null;\n  }\n  context.beginPath();\n  context.rect(\n    0,\n    canvas.height / 2 - boxHeight / 2,\n    canvas.width - options.sidebar,\n    boxHeight\n  );\n  context.fillStyle = \"rgba(255,255,255,0.5)\";\n  context.fill();\n\n  context.beginPath();\n  context.font = \"48px sans-serif\";\n  context.textAlign = \"center\";\n  context.textBaseline = \"middle\";\n  context.fillStyle = \"#f00\";\n  context.fillText(\n    \"Game over\",\n    (canvas.width - options.sidebar) / 2,\n    canvas.height / 2\n  );\n};\n\nconst update = () => {\n  if (timeout) {\n    clearTimeout(timeout);\n    timeout = null;\n  }\n  pieces[0].update();\n  timeout = setTimeout(update, cooldown);\n};\n\nconst init = () => {\n  if (frameId) {\n    window.cancelAnimationFrame(frameId);\n    frameId = null;\n  }\n\n  if (timeout) {\n    clearTimeout(timeout);\n    timeout = null;\n  }\n\n  cooldown = 500;\n  points = 0;\n\n  if (grid) {\n    grid.events.removeListener(\"score\", onScore);\n    grid.events.removeListener(\"end\", onEnd);\n  }\n  grid = new Grid(options);\n  grid.events.on(\"score\", onScore);\n  grid.events.on(\"end\", onEnd);\n\n  if (pieces[0]) {\n    pieces[0].events.removeListener(\"piece\", onPiece);\n    pieces[0].events.removeListener(\"positions\", onPositions);\n    pieces[0].events.removeListener(\"test\", onPiece);\n    pieces = [];\n  }\n  pieces.unshift(new Tetrimino(options));\n  pieces[0].events.on(\"piece\", onPiece);\n  pieces[0].events.on(\"positions\", onPositions);\n  pieces[0].events.on(\"test\", onTest);\n  pieces[0].init();\n\n  frameId = window.requestAnimationFrame(gameLoop);\n  update();\n};\n\ninit();\n\nbindKeys({\n  move: (direction) => {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    timeout = setTimeout(update, cooldown);\n    pieces[0].move(direction);\n  },\n  newGame: init,\n  rotate: () => {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    timeout = setTimeout(update, cooldown);\n    pieces[0].rotate();\n  },\n});\n","import Mousetrap from \"mousetrap\";\n\nexport default function bindKeys({ move, newGame, rotate }) {\n  Mousetrap.bind(\"up\", () => {\n    rotate();\n  });\n\n  Mousetrap.bind(\"right\", () => {\n    move(\"RIGHT\");\n  });\n\n  Mousetrap.bind(\"down\", () => {\n    move(\"DOWN\");\n  });\n\n  Mousetrap.bind(\"left\", () => {\n    move(\"LEFT\");\n  });\n\n  Mousetrap.bind(\"enter\", () => {\n    newGame();\n  });\n\n  Mousetrap.bind(\"space\", () => {\n    newGame();\n  });\n}\n"],"sourceRoot":""}